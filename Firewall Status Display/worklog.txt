9-28-22
-------
Added appsettings.json and configuration capability
	- Set up IConfiguration builder
	- Added appsettings.json file
	- Populated appsettings.json with the default SQL connection string
Set up database and studied/integrated IPTables log fields
	- Installed EntityFrameworkCore NuGet package
	- Created Data folder and Data/Contexts Data/Models subfolders
	- Gathered sample data from iptables and populated in data model as comments
	- Created entity class and assigned database table fields
	- Got list of ISO 3166-1 3-digit country codes
	- Added src/dest country code fields (for geolocation later)
	- Installed Microsoft.EntityFrameworkCore.Tools NuGet package
	- Set up DBContext for database access
	- Created data repository interface and concrete implementation w/parser logic
Implementing beginning stages of Geolocation
	- Began work on geolocation using the free ip-api.com tool
	- Set up DbContext SavingChanges event to grab 100 Geolocation IP addresses at a time
	- Created scoped HttpContext handler for efficient IP address bulk retrieval
	- Added http requests to ip-api.com to retrieve Geolocation information
	- Added strongly-typed classes for working with ip-api.com
	- TODO: Added rate-limiting logic of 15 batch requests per minute (effectively 1500 IPs per minute)
Re-pivot of Geolocation strategy
	- Decided the rate limits may be insufficient for large amounts of iptables log traffic and will complicate implementation
	- Found monthly-updated geolocation database at: https://db-ip.com/db/download/ip-to-city-lite
	- Database is in CSV format so added CsvHelper NuGet module
	- Wrote import tool to convert the CSV into a database. TODO: Speed this up as it takes about 8min over a 1GB link
	- Added IP geolocation table
	- Added column indexes to beginning/end IP. Still too slow but this might help: http://mysql.rjweb.org/doc.php/ipranges
	- Experimenting with column data types/indexes to speed up searching

9-29-22
-------
Geolocation
	- Lookup performance isn't the best but acceptable for now. Will refactor later so I can move onto other parts of the app
	- Added check for private IPs
	- Added geolocation cache with variable entries (10,000 to start) to avoid redundant DB lookups
	- Added cache statistic functions to cache interface
	- Worked more on parser
	- Added capability of writing firewall entries to database
	- Tweaked asynchronous handling and worked out bugs with higher volume traffic
	- Ran into concurrent access issue with geolocation & firewall entries which has delayed progress
		- https://learn.microsoft.com/en-us/ef/core/dbcontext-configuration/#avoiding-dbcontext-threading-issues

9-30-22
-------
Geolocation
	- Found acceptable solution to database concurrency issue
		- Separated geolocation and firewall entries into two seperate DbContexts
		- Created background thread to commit firewall entries once per minute instead of each time they come in

10-10-22
-------
Database
	- Shored up exception handling for added reliability

UI
	- Created firewall view using datagrid
	- Created firewall view model with row items
	- Added firewall view model data fields and methods
	- Added and implemented firewall view model add entry DelegateCommand
	- Added trigger for syslog recieve event to display entry on firewall tab
		- Modified data repo interface to return the parsed firewall entry for easier processing
		- Arranged columns to show most important info first
		- Added additional fields to parser
		- Added TCP flag checks for parser
	- Add UI logger service for status bar & add program logger output view/viewmodel
		- Added function to change status bar text/color
		- Added function to add entries to settings output log
	- Added logger textbox to settings window
	- Began adding log data outputs
	- Added tab controls and basic layout to settings view

Bugs/features 
	- Fixed bug incorrectly counting the number of commits
	- Added commit at shutdown
	- Added status bar
	- Wrote powershell script to listen on port 514 for testing purposes
	- Increased reliability of UDP listener with bind check & one minute retry loop
	- General refactoring

10-30-22
--------
UI
	- Added status view with statistics and traffic tabs
		- Added fields and methods to Statistics view model
		- Added firewall entry statistics
		- Added geolocation cache statistics
		- Added graph for firewall entries per day
		- Added update task in background for main program
	- Added settings view items
		- Database location
		- Import Geolocation CSV
Database/repo
	- Added method to get all firewall entries

11-6-2022
---------
UI
	- Added status view tab for traffic by port
	- Added status view tab for port scans